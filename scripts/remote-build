#!/bin/bash

if [ x"$1" == x"-d" ]; then
    set -x
    shift
fi


set_defaults() {
    : ${BUILD_CONFIG:=default}
    : ${REMOTE_NAME:=$AWS_NAME}
    : ${REMOTE_DIR:=ci-builds/$BUILD_CONFIG}
}

local_config() {
    # allow user to override default settings
    # normally settings should use
    #   : ${VAR:=value}
    # in which case the first one processed wins
    # ENV vars, project local, the project checked in, the global user
    # use of
    #   VAR=value
    # means an override, last one processed wins
    # global user, project checked in, project local, env vars
    for d in .prjinfo/local .prjinfo  ~/.prjinfo ; do
        if [ -r $d/setenv ]; then
            . $d/setenv
        fi
    done

    set_defaults
}

push_this_git() {
    ssh $REMOTE_NAME bash -c "\"mkdir -p $REMOTE_DIR; cd $REMOTE_DIR; git init\""
    git push -f $REMOTE_NAME:$REMOTE_DIR/.git HEAD:pending
    ssh $REMOTE_NAME bash -c "\"cd $REMOTE_DIR; git reset --hard pending\""
}

do_build() {
    cd $(dirname $0)/..
    case $1 in
    *.yml)
        ~/.local/bin/kas build $1
        ;;
    *.sh)
        ./$1
    esac
}

if [ "$1" == on-remote ]; then
    shift
    do_build "$@"
else
    case $1 in
    *.yml)
        TMP=${1#ci/}
        TMP=${TMP%.yml}
        BUILD_CONFIG=$TMP
        ;;
    esac
    local_config
    echo "Building on $REMOTE_NAME"
    push_this_git
    ssh -t $REMOTE_NAME $REMOTE_DIR/scripts/remote-build on-remote "$@"
fi
